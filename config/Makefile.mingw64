#**************************************************************************
#*                                                                        *
#*                                 OCaml                                  *
#*                                                                        *
#*            Xavier Leroy, projet Cristal, INRIA Rocquencourt            *
#*                                                                        *
#*   Copyright 1999 Institut National de Recherche en Informatique et     *
#*     en Automatique.                                                    *
#*                                                                        *
#*   All rights reserved.  This file is distributed under the terms of    *
#*   the GNU Lesser General Public License version 2.1, with the          *
#*   special exception on linking described in the file LICENSE.          *
#*                                                                        *
#**************************************************************************

# Configuration for Windows, Mingw compiler

######### General configuration

prefix=C:/ocamlmgw64
exec_prefix=${prefix}

### Remove this to disable compiling ocamldebug
WITH_DEBUGGER=ocamldebugger

### Remove this to disable compiling ocamldoc
WITH_OCAMLDOC=ocamldoc

### Where to install the binaries.
BINDIR=${exec_prefix}/bin

### Where to install the standard library
LIBDIR=${exec_prefix}/lib/ocaml

### Where to install the stub DLLs
STUBLIBDIR=${exec_prefix}/lib/ocaml/stublibs

### Where to install the man pages
MANDIR=${prefix}/man

########## Toolchain and OS dependencies

TOOLCHAIN=mingw

### Toolchain prefix
TARGET=x86_64-w64-mingw32
HOST=x86_64-w64-mingw32

CCOMPTYPE=cc
O=o
A=a
S=s
SO=s.o
EXE=.exe
EMPTY=
OUTPUTEXE=-o $(EMPTY)
EXT_DLL=.dll
EXT_OBJ=.o
OUTPUTOBJ=-o $(EMPTY)
EXT_LIB=.a
EXT_ASM=.s
PROGRAMS_MAN_SECTION=1
LIBRARIES_MAN_SECTION=3
HASHBANGSCRIPTS=false
PTHREAD_LINK=
PTHREAD_CAML_LINK=$(addprefix -cclib ,$(PTHREAD_LINK))
X11_INCLUDES=$(addprefix -I,$(X11_INCDDIR))
X11_LINK=NONE
RPATH=
SUPPORTS_SHARED_LIBRARIES=true
SHAREDLIB_CFLAGS=
MKSHAREDLIBRPATH=
ASM=x86_64-w64-mingw32-as
ASPP=x86_64-w64-mingw32-gcc -c
ASPPPROFFLAGS=
PROFILING=false
DYNLINKOPTS=
CC_PROFILE=
SYSTHREAD_SUPPORT=true
EXTRALIBS=
NATDYNLINK=true
NATDYNLINKOPTS=
CMXS=cmxs
RUNTIMED=true
ASM_CFI_SUPPORTED=false
WITH_FRAME_POINTERS=false
UNIX_OR_WIN32=win32
UNIXLIB=win32unix
GRAPHLIB=win32graph
FLAMBDA=false
WITH_FLAMBDA_INVARIANTS=false
WITH_PROFINFO=false
WITH_SPACETIME=false
ENABLE_CALL_COUNTS=true
LIBUNWIND_AVAILABLE=false
LIBUNWIND_LINK_FLAGS=
PROFINFO_WIDTH=0
FORCE_SAFE_STRING=false
DEFAULT_SAFE_STRING=true
WINDOWS_UNICODE=1
AFL_INSTRUMENT=false
AWK=gawk
CC_HAS_DEBUG_PREFIX_MAP=false
AS_HAS_DEBUG_PREFIX_MAP=false

########## Configuration for the bytecode compiler

### Which C compiler to use for the bytecode interpreter.
CC=x86_64-w64-mingw32-gcc
OC_CFLAGS=-O -mms-bitfields -Wno-unused -Wall -fno-tree-vrp
# -fno-tree-vrp is here to try to work around the Skylake/Kaby lake bug,
# and only works on GCC 4.2 and later.
OC_CPPFLAGS=-DCAML_NAME_SPACE -DUNICODE -D_UNICODE -DWINDOWS_UNICODE=$(WINDOWS_UNICODE)
OCAMLC_CFLAGS=-O -mms-bitfields

OC_LDFLAGS=-municode

### Libraries needed
BYTECCLIBS=-lws2_32 -lversion
NATIVECCLIBS=-lws2_32 -lversion

### How to invoke the C preprocessor
CPP=cpp

### Flexlink
FLEXLINK_CMD=flexlink
  FLEXDLL_CHAIN=mingw64
# FLEXLINK_FLAGS must be safe to insert in an OCaml string
#   (see ocamlmklibconfig.ml in tools/Makefile)
FLEXLINK_FLAGS=-chain $(FLEXDLL_CHAIN) -stack 33554432
FLEXLINK=$(FLEXLINK_CMD) $(FLEXLINK_FLAGS)
FLEXDIR:=$(shell $(FLEXLINK) -where 2>/dev/null)
ifeq ($(FLEXDIR),)
IFLEXDIR=-I"../flexdll"
else
IFLEXDIR=-I"$(FLEXDIR)"
endif
# MKDLL, MKEXE and MKMAINDLL must ultimately be equivalent to
#   $(FLEXLINK_CMD) $(FLEXLINK_FLAGS) [-exe|-maindll]
# or OCAML_FLEXLINK overriding will not work (see utils/config.mlp)
MKDLL=$(FLEXLINK)
MKEXE=$(MKEXE_ANSI) $(if $(OC_LDFLAGS),-link "$(OC_LDFLAGS)")
MKEXEDEBUGFLAG=-g
MKMAINDLL=$(FLEXLINK) -maindll

### Native command to build ocamlrun.exe without flexlink
    MKEXE_BOOT=$(CC) $(OC_CFLAGS) $(OC_LDFLAGS) $(OUTPUTEXE)$(1) $(2)

### Native command to build an ANSI executable
  MKEXE_ANSI=$(FLEXLINK) -exe

### How to build a static library
MKLIB=rm -f $(1) && x86_64-w64-mingw32-ar rc $(1) $(2) && x86_64-w64-mingw32-ranlib $(1)

### Canonicalize the name of a system library
SYSLIB=-l$(1)

### The ranlib command
RANLIB=x86_64-w64-mingw32-ranlib
RANLIBCMD=x86_64-w64-mingw32-ranlib

### The ar command
ARCMD=x86_64-w64-mingw32-ar

############# Configuration for the native-code compiler

### Name of architecture for the native-code compiler
ARCH=amd64
ARCH64=true

### Name of architecture model for the native-code compiler.
MODEL=default

### Name of operating system family for the native-code compiler.
SYSTEM=mingw64

OCAMLOPT_CFLAGS=-O -mms-bitfields

### Build partially-linked object file
PACKLD=x86_64-w64-mingw32-ld -r -o $(EMPTY)

### Set to "true" to install ".byte" executables (ocamlc.byte, etc.)
INSTALL_BYTECODE_PROGRAMS=true

############# Configuration for the contributed libraries

OTHERLIBRARIES=win32unix str dynlink bigarray raw_spacetime_lib systhreads win32graph

############# for the testsuite makefiles
  OTOPDIR=$(WINTOPDIR)
  CTOPDIR=$(TOPDIR)
  CYGPATH=cygpath -m
  DIFF=/usr/bin/diff -q --strip-trailing-cr
  SET_LD_PATH=PATH="$(PATH):$(LD_PATH)"
MAX_TESTSUITE_DIR_RETRIES=1
FLAT_FLOAT_ARRAY=true
